myFunc (before substitution) =  class=SymbolicFunction name=Unnamed implementation=class=FunctionImplementation name=Unnamed description=[x1,x2,y0,y1,y2] evaluationImplementation=class=SymbolicEvaluation name=Unnamed inputVariablesNames=[x1,x2] outputVariablesNames=[y0,y1,y2] formulas=[x1*sin(x2),cos(x1+x2),(x2+1)*exp(x1-2*x2)] gradientImplementation=class=SymbolicGradient name=Unnamed evaluation=class=SymbolicEvaluation name=Unnamed inputVariablesNames=[x1,x2] outputVariablesNames=[y0,y1,y2] formulas=[x1*sin(x2),cos(x1+x2),(x2+1)*exp(x1-2*x2)] hessianImplementation=class=SymbolicHessian name=Unnamed evaluation=class=SymbolicEvaluation name=Unnamed inputVariablesNames=[x1,x2] outputVariablesNames=[y0,y1,y2] formulas=[x1*sin(x2),cos(x1+x2),(x2+1)*exp(x1-2*x2)]
myGradient= class=CenteredFiniteDifferenceGradient name=Unnamed epsilon=class=Point name=Unnamed dimension=2 values=[0.01,0.01] evaluation=class=SymbolicEvaluation name=Unnamed inputVariablesNames=[x1,x2] outputVariablesNames=[y0,y1,y2] formulas=[x1*sin(x2),cos(x1+x2),(x2+1)*exp(x1-2*x2)]
myFunc.gradient( class=Point name=Unnamed dimension=2 values=[1,1] )= class=Matrix implementation=class=MatrixImplementation name=Unnamed rows=2 columns=3 values=[0.841471,0.540302,-0.909297,-0.909297,0.735759,-1.10364]
myGradient.gradient( class=Point name=Unnamed dimension=2 values=[1,1] )= class=Matrix implementation=class=MatrixImplementation name=Unnamed rows=2 columns=3 values=[0.841471,0.540293,-0.909282,-0.909282,0.735771,-1.10366]
myFunc (after substitution) =  class=SymbolicFunction name=Unnamed implementation=class=FunctionImplementation name=Unnamed description=[x1,x2,y0,y1,y2] evaluationImplementation=class=SymbolicEvaluation name=Unnamed inputVariablesNames=[x1,x2] outputVariablesNames=[y0,y1,y2] formulas=[x1*sin(x2),cos(x1+x2),(x2+1)*exp(x1-2*x2)] gradientImplementation=class=CenteredFiniteDifferenceGradient name=Unnamed epsilon=class=Point name=Unnamed dimension=2 values=[0.01,0.01] evaluation=class=SymbolicEvaluation name=Unnamed inputVariablesNames=[x1,x2] outputVariablesNames=[y0,y1,y2] formulas=[x1*sin(x2),cos(x1+x2),(x2+1)*exp(x1-2*x2)] hessianImplementation=class=SymbolicHessian name=Unnamed evaluation=class=SymbolicEvaluation name=Unnamed inputVariablesNames=[x1,x2] outputVariablesNames=[y0,y1,y2] formulas=[x1*sin(x2),cos(x1+x2),(x2+1)*exp(x1-2*x2)]
myFunc.gradient( class=Point name=Unnamed dimension=2 values=[1,1] )= class=Matrix implementation=class=MatrixImplementation name=Unnamed rows=2 columns=3 values=[0.841471,0.540293,-0.909282,-0.909282,0.735771,-1.10366]  (after substitution)
