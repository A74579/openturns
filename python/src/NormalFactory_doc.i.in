%feature("docstring") OT::NormalFactory
"Normal factory.

Available constructor:
    NormalFactory()

The parameters are estimated by method of moments.

.. math::
    :nowrap:

    \begin{eqnarray*}
      \displaystyle\Hat{\vect{\mu}}_n^{\strut} = \bar{\vect{x}}_n\\
      \displaystyle\Hat{\mathrm{Cov}}_n = \frac{1}{n-1}\sum_{i=1}^n\left(\vect{X}_i-\Hat{\vect{\mu}}_n\right)\left(\vect{X}_i-\Hat{\vect{\mu}}_n\right)^t
    \end{eqnarray*}

See also
--------
DistributionFactory, Normal

Examples
--------

In the following example, the parameters of a :class:`~openturns.Normal` 
are estimated from a sample. 

>>> import openturns as ot
>>> ot.RandomGenerator.SetSeed(0)
>>> size = 10000
>>> distribution = ot.Normal(1.0, 2.0)
>>> sample = distribution.getSample(size)
>>> factory = ot.NormalFactory()
>>> estimated = factory.build(sample)"

// ----------------------------------------------------------------------------

%feature("docstring") OT::NormalFactory::buildAsNormal
"Estimate the distribution as native distribution.

Parameters
----------
sample : :class:`~openturns.Sample`
    Data

Returns
-------
distribution : :class:`~openturns.Normal`
    The estimated distribution"

