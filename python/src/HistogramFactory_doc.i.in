%feature("docstring") OT::HistogramFactory
"Histogram factory.

Available constructor:
    HistogramFactory()

Notes
-----
The bandwidth is the AMISE-optimal one: 

.. math::

    h = \displaystyle \frac{(24\sqrt{\pi})^{1/3} \sigma_n}{n^{1/3}}

where :math:`\sigma_n^2` is the non biaised variance of the data.
The range is :math:`[min(data), max(data)]`

Examples
--------
Create an histogram:

>>> import openturns as ot
>>> sample = ot.Normal().getSample(50)
>>> histogram = ot.HistogramFactory().build(sample)

Create an histogram from a number of bins:

>>> import openturns as ot
>>> sample = ot.Normal().getSample(50)
>>> binNumber = 10
>>> histogram = ot.HistogramFactory().build(sample,binNumber)

Create an histogram from a bandwidth:

>>> import openturns as ot
>>> sample = ot.Normal().getSample(50)
>>> bandwidth = 0.5
>>> histogram = ot.HistogramFactory().build(sample,bandwidth)

Create an histogram from a first value and widths:

>>> import openturns as ot
>>> ot.RandomGenerator.SetSeed(0)
>>> sample = ot.Normal().getSample(50)
>>> first = -4
>>> width = ot.Point(7,1.)
>>> histogram = ot.HistogramFactory().build(sample,first,width)

Compute Silverman's bandwidth:

>>> import openturns as ot
>>> ot.RandomGenerator.SetSeed(0)
>>> sample = ot.Normal().getSample(50)
>>> factory = ot.HistogramFactory()
>>> factory.computeSilvermanBandwidth(sample)
0.820718...

See also
--------
DistributionFactory, Histogram"
